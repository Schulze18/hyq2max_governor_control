#include "hyq2max_governor_control/hyq2max_jacobian_functions.h"
#include <Eigen/Dense>
#include <iostream>


void updateCoMJacobian(Eigen::Matrix<double,12,1> *q, Eigen::Matrix<double,3,3> *J_CoM_LF, Eigen::Matrix<double,3,3> *J_CoM_RF, Eigen::Matrix<double,3,3> *J_CoM_LH, Eigen::Matrix<double,3,3> *J_CoM_RH, Eigen::Matrix<double,3,12> *J_CoM){
    /*(*J_CoM_LF)(1,0) = (0.605e-3 * cos((*q)(1,0)) - 0.1346e-2 * sin((*q)(1,0)));
    (*J_CoM_LF)(1,1) = c1;
    J_CoM_HAA_LF(0,0) = 2340;
     std::cout << (*J_CoM_LF) << std::endl << std::endl;
      std::cout << J_CoM_HAA_LF << std::endl << std::endl;*/

    //Left Front Leg
    J_CoM_HAA_LF(1,0) = (c1 * cos((*q)(0,0)) - c2 * sin((*q)(0,0)));
    J_CoM_HAA_LF(2,0) = (-c1 * sin((*q)(0,0)) - c2 * cos((*q)(0,0)));
    //std::cout << "Left front lef COM" << std::endl ;
    //std::cout << J_CoM_HAA_LF << std::endl << std::endl;

    J_CoM_HFE_LF(0,1) = (-c3 * cos((*q)(1,0)) - c4 * sin((*q)(1,0)));
    J_CoM_HFE_LF(1,0) = (-c5 * cos((*q)(0,0) - (*q)(1,0)) - c5 * cos((*q)(0,0) + (*q)(1,0)) - c6 * sin((*q)(0,0) + (*q)(1,0)) + c6 * sin((*q)(0,0) - (*q)(1,0)) - c12 * sin((*q)(0,0)));
    J_CoM_HFE_LF(1,1) = (c5 * cos((*q)(0,0) - (*q)(1,0)) - c5 * cos((*q)(0,0) + (*q)(1,0)) - c6 * sin((*q)(0,0) + (*q)(1,0)) - c6 * sin((*q)(0,0) - (*q)(1,0)));
    J_CoM_HFE_LF(2,0) = (c5 * sin((*q)(0,0) + (*q)(1,0)) + c5 * sin((*q)(0,0) - (*q)(1,0)) + c6 * cos((*q)(0,0) - (*q)(1,0)) - c6 * cos((*q)(0,0) + (*q)(1,0)) - c12 * cos((*q)(0,0)));
    J_CoM_HFE_LF(2,1) = (c5 * sin((*q)(0,0) + (*q)(1,0)) - c5 * sin((*q)(0,0) - (*q)(1,0)) - c6 * cos((*q)(0,0) - (*q)(1,0)) - c6 * cos((*q)(0,0) + (*q)(1,0)));
    //std::cout << J_CoM_HFE_LF << std::endl << std::endl;

    J_CoM_KFE_LF(0,1) = (-c7 * cos((*q)(1,0) + (*q)(2,0)) + c9 * sin((*q)(1,0) + (*q)(2,0)) - c10 * cos((*q)(1,0)));
    J_CoM_KFE_LF(0,2) = (-c7 * cos((*q)(1,0) + (*q)(2,0)) + c9 * sin((*q)(1,0) + (*q)(2,0)));
    J_CoM_KFE_LF(1,0) = (-c8 * cos((*q)(0,0) - (*q)(1,0) - (*q)(2,0)) - c8 * cos((*q)(0,0) + (*q)(1,0) + (*q)(2,0)) - c11 * sin((*q)(0,0) - (*q)(1,0) - (*q)(2,0)) + c11 * sin((*q)(0,0) + (*q)(1,0) + (*q)(2,0)) - c13 * sin((*q)(0,0)) - c14 * cos((*q)(0,0) - (*q)(1,0)) - c14 * cos((*q)(0,0) + (*q)(1,0)));
    J_CoM_KFE_LF(1,1) = (-c8 * cos((*q)(0,0) + (*q)(1,0) + (*q)(2,0)) + c8 * cos((*q)(0,0) - (*q)(1,0) - (*q)(2,0)) + c11 * sin((*q)(0,0) + (*q)(1,0) + (*q)(2,0)) + c11 * sin((*q)(0,0) - (*q)(1,0) - (*q)(2,0)) - c14 * cos((*q)(0,0) + (*q)(1,0)) + c14 * cos((*q)(0,0) - (*q)(1,0)));
    J_CoM_KFE_LF(1,2) = (-c8 * cos((*q)(0,0) + (*q)(1,0) + (*q)(2,0)) + c8 * cos((*q)(0,0) - (*q)(1,0) - (*q)(2,0)) + c11 * sin((*q)(0,0) + (*q)(1,0) + (*q)(2,0)) + c11 * sin((*q)(0,0) - (*q)(1,0) - (*q)(2,0)));
    J_CoM_KFE_LF(2,0) = (c8 * sin((*q)(0,0) - (*q)(1,0) - (*q)(2,0)) + c8 * sin((*q)(0,0) + (*q)(1,0) + (*q)(2,0)) - c11 * cos((*q)(0,0) - (*q)(1,0) - (*q)(2,0)) + c11 * cos((*q)(0,0) + (*q)(1,0) + (*q)(2,0)) - c13 * cos((*q)(0,0)) + c14 * sin((*q)(0,0) - (*q)(1,0)) + c14 * sin((*q)(0,0) + (*q)(1,0)));
    J_CoM_KFE_LF(2,1) = (-c8 * sin((*q)(0,0) - (*q)(1,0) - (*q)(2,0)) + c8 * sin((*q)(0,0) + (*q)(1,0) + (*q)(2,0)) + c11 * cos((*q)(0,0) - (*q)(1,0) - (*q)(2,0)) + c11 * cos((*q)(0,0) + (*q)(1,0) + (*q)(2,0)) - c14 * sin((*q)(0,0) - (*q)(1,0)) + c14 * sin((*q)(0,0) + (*q)(1,0)));
    J_CoM_KFE_LF(2,2) = (-c8 * sin((*q)(0,0) - (*q)(1,0) - (*q)(2,0)) + c8 * sin((*q)(0,0) + (*q)(1,0) + (*q)(2,0)) + c11 * cos((*q)(0,0) - (*q)(1,0) - (*q)(2,0)) + c11 * cos((*q)(0,0) + (*q)(1,0) + (*q)(2,0)));
    //std::cout << J_CoM_KFE_LF << std::endl << std::endl;

    (*J_CoM_LF) = mi_1/mi_total*J_CoM_HAA_LF + mi_2/mi_total*J_CoM_HFE_LF + mi_3/mi_total*J_CoM_KFE_LF;
    //std::cout << (*J_CoM_LF) << std::endl << std::endl;

    //Right Front Leg
    J_CoM_HAA_RF(1,0) = (-c1 * cos((*q)(3,0)) + c2 * sin((*q)(3,0)));
    J_CoM_HAA_RF(2,0) = (-c1 * sin((*q)(3,0)) - c2 * cos((*q)(3,0)));
    //std::cout << "Right front leg COM" << std::endl ;
    //std::cout << J_CoM_HAA_RF << std::endl << std::endl;

    J_CoM_HFE_RF(0,1) = (-c3 * cos((*q)(4,0)) - c4 * sin((*q)(4,0)));
    J_CoM_HFE_RF(1,0) = (c5 * cos((*q)(3,0) - (*q)(4,0)) + c5 * cos((*q)(3,0) + (*q)(4,0)) + c6 * sin((*q)(3,0) + (*q)(4,0)) - c6 * sin((*q)(3,0) - (*q)(4,0)) + c15 * sin((*q)(3,0)));
    J_CoM_HFE_RF(1,1) = (-c5 * cos((*q)(3,0) - (*q)(4,0)) + c5 * cos((*q)(3,0) + (*q)(4,0)) + c6 * sin((*q)(3,0) + (*q)(4,0)) + c6 * sin((*q)(3,0) - (*q)(4,0)));
    J_CoM_HFE_RF(2,0) = (c5 * sin((*q)(3,0) + (*q)(4,0)) + c5 * sin((*q)(3,0) - (*q)(4,0)) + c6 * cos((*q)(3,0) - (*q)(4,0)) - c6 * cos((*q)(3,0) + (*q)(4,0)) - c15 * cos((*q)(3,0)));
    J_CoM_HFE_RF(2,1) = (c5 * sin((*q)(3,0) + (*q)(4,0)) - c5 * sin((*q)(3,0) - (*q)(4,0)) - c6 * cos((*q)(3,0) - (*q)(4,0)) - c6 * cos((*q)(3,0) + (*q)(4,0)));
    //std::cout << J_CoM_HFE_RF << std::endl << std::endl;

    J_CoM_KFE_RF(0,1) = (-c7 * cos((*q)(4,0) + (*q)(5,0)) + c9 * sin((*q)(4,0) + (*q)(5,0)) - c10 * cos((*q)(4,0)));
    J_CoM_KFE_RF(0,2) = (-c7 * cos((*q)(4,0) + (*q)(5,0)) + c9 * sin((*q)(4,0) + (*q)(5,0)));
    J_CoM_KFE_RF(1,0) = (c8 * cos((*q)(3,0) + (*q)(4,0) + (*q)(5,0)) + c8 * cos((*q)(3,0) - (*q)(4,0) - (*q)(5,0)) - c11 * sin((*q)(3,0) + (*q)(4,0) + (*q)(5,0)) + c11 * sin((*q)(3,0) - (*q)(4,0) - (*q)(5,0)) + c16 * sin((*q)(3,0)) + c14 * cos((*q)(3,0) + (*q)(4,0)) + c14 * cos((*q)(3,0) - (*q)(4,0)));
    J_CoM_KFE_RF(1,1) = (c8 * cos((*q)(3,0) + (*q)(4,0) + (*q)(5,0)) - c8 * cos((*q)(3,0) - (*q)(4,0) - (*q)(5,0)) - c11 * sin((*q)(3,0) + (*q)(4,0) + (*q)(5,0)) - c11 * sin((*q)(3,0) - (*q)(4,0) - (*q)(5,0)) + c14 * cos((*q)(3,0) + (*q)(4,0)) - c14 * cos((*q)(3,0) - (*q)(4,0)));
    J_CoM_KFE_RF(1,2) = (c8 * cos((*q)(3,0) + (*q)(4,0) + (*q)(5,0)) - c8 * cos((*q)(3,0) - (*q)(4,0) - (*q)(5,0)) - c11 * sin((*q)(3,0) + (*q)(4,0) + (*q)(5,0)) - c11 * sin((*q)(3,0) - (*q)(4,0) - (*q)(5,0)));
    J_CoM_KFE_RF(2,0) = (c8 * sin((*q)(3,0) - (*q)(4,0) - (*q)(5,0)) + c8 * sin((*q)(3,0) + (*q)(4,0) + (*q)(5,0)) - c11 * cos((*q)(3,0) - (*q)(4,0) - (*q)(5,0)) + c11 * cos((*q)(3,0) + (*q)(4,0) + (*q)(5,0)) - c16 * cos((*q)(3,0)) + c14 * sin((*q)(3,0) - (*q)(4,0)) + c14 * sin((*q)(3,0) + (*q)(4,0)));
    J_CoM_KFE_RF(2,1) = (-c8 * sin((*q)(3,0) - (*q)(4,0) - (*q)(5,0)) + c8 * sin((*q)(3,0) + (*q)(4,0) + (*q)(5,0)) + c11 * cos((*q)(3,0) - (*q)(4,0) - (*q)(5,0)) + c11 * cos((*q)(3,0) + (*q)(4,0) + (*q)(5,0)) - c14 * sin((*q)(3,0) - (*q)(4,0)) + c14 * sin((*q)(3,0) + (*q)(4,0)));
    J_CoM_KFE_RF(2,2) = (-c8 * sin((*q)(3,0) - (*q)(4,0) - (*q)(5,0)) + c8 * sin((*q)(3,0) + (*q)(4,0) + (*q)(5,0)) + c11 * cos((*q)(3,0) - (*q)(4,0) - (*q)(5,0)) + c11 * cos((*q)(3,0) + (*q)(4,0) + (*q)(5,0)));
    //std::cout << J_CoM_KFE_RF << std::endl << std::endl;

    (*J_CoM_RF) = mi_1/mi_total*J_CoM_HAA_RF + mi_2/mi_total*J_CoM_HFE_RF + mi_3/mi_total*J_CoM_KFE_RF;
    //std::cout << (*J_CoM_RF) << std::endl << std::endl;


    //Left Hind Leg
    J_CoM_HAA_LH(1,0) = (c1 * cos((*q)(6,0)) + sin((*q)(6,0)) * c17);
    J_CoM_HAA_LH(2,0) = (-c1 * sin((*q)(6,0)) + cos((*q)(6,0)) * c17);
    //std::cout << "Left Hind Leg COM" << std::endl ;
    //std::cout << J_CoM_HAA_LH << std::endl << std::endl;

    J_CoM_HFE_LH(0,1) = (-c3 * cos((*q)(7,0)) + sin((*q)(7,0)) *c18);
    J_CoM_HFE_LH(1,0) = (-c5 * cos((*q)(6,0) - (*q)(7,0)) - c5 * cos((*q)(6,0) + (*q)(7,0)) + sin((*q)(6,0) + (*q)(7,0)) * c19 + sin((*q)(6,0) - (*q)(7,0)) * (-c19) + sin((*q)(6,0)) * (-c20));
    J_CoM_HFE_LH(1,1) = (c5 * cos((*q)(6,0) - (*q)(7,0)) - c5 * cos((*q)(6,0) + (*q)(7,0)) + sin((*q)(6,0) + (*q)(7,0)) * c19 + sin((*q)(6,0) - (*q)(7,0)) * c19);
    J_CoM_HFE_LH(2,0) = (c5 * sin((*q)(6,0) + (*q)(7,0)) + c5 * sin((*q)(6,0) - (*q)(7,0)) + cos((*q)(6,0) - (*q)(7,0)) * (-c19) + cos((*q)(6,0) + (*q)(7,0)) * c19 + cos((*q)(6,0)) * (-c20));
    J_CoM_HFE_LH(2,1) = (c5 * sin((*q)(6,0) + (*q)(7,0)) - c5 * sin((*q)(6,0) - (*q)(7,0)) + cos((*q)(6,0) - (*q)(7,0)) * c19 + cos((*q)(6,0) + (*q)(7,0)) * c19);
    //std::cout << J_CoM_HFE_LH << std::endl << std::endl;
    
    J_CoM_KFE_LH(0,1) = (-c7 * cos((*q)(7,0) + (*q)(8,0)) + sin((*q)(7,0) + (*q)(8,0)) * (-c21) - c10 * cos((*q)(7,0)));
    J_CoM_KFE_LH(0,2) = (-c7 * cos((*q)(7,0) + (*q)(8,0)) + sin((*q)(7,0) + (*q)(8,0)) * (-c21));
    J_CoM_KFE_LH(1,0) = (-c8 * cos((*q)(6,0) - (*q)(7,0) - (*q)(8,0)) - c8 * cos((*q)(6,0) + (*q)(7,0) + (*q)(8,0)) + sin((*q)(6,0) - (*q)(7,0) - (*q)(8,0)) * c22 + sin((*q)(6,0) + (*q)(7,0) + (*q)(8,0)) * (-c22) + sin((*q)(6,0)) * (-c24) - c14 * cos((*q)(6,0) - (*q)(7,0)) - c14 * cos((*q)(6,0) + (*q)(7,0)));
    J_CoM_KFE_LH(1,1) = (-c8 * cos((*q)(6,0) + (*q)(7,0) + (*q)(8,0)) + c8 * cos((*q)(6,0) - (*q)(7,0) - (*q)(8,0)) + sin((*q)(6,0) + (*q)(7,0) + (*q)(8,0)) * (-c22) + sin((*q)(6,0) - (*q)(7,0) - (*q)(8,0)) * (-c22) - c14 * cos((*q)(6,0) + (*q)(7,0)) + c14 * cos((*q)(6,0) - (*q)(7,0)));
    J_CoM_KFE_LH(1,2) = (-c8 * cos((*q)(6,0) + (*q)(7,0) + (*q)(8,0)) + c8 * cos((*q)(6,0) - (*q)(7,0) - (*q)(8,0)) + sin((*q)(6,0) + (*q)(7,0) + (*q)(8,0)) * (-c22) + sin((*q)(6,0) - (*q)(7,0) - (*q)(8,0)) * (-c22));
    J_CoM_KFE_LH(2,0) = (c8 * sin((*q)(6,0) - (*q)(7,0) - (*q)(8,0)) + c8 * sin((*q)(6,0) + (*q)(7,0) + (*q)(8,0)) + cos((*q)(6,0) - (*q)(7,0) - (*q)(8,0)) * c22 + cos((*q)(6,0) + (*q)(7,0) + (*q)(8,0)) * (-c22) + cos((*q)(6,0)) * (-c24) + c14 * sin((*q)(6,0) - (*q)(7,0)) + c14 * sin((*q)(6,0) + (*q)(7,0)));
    J_CoM_KFE_LH(2,1) = (-c8 * sin((*q)(6,0) - (*q)(7,0) - (*q)(8,0)) + c8 * sin((*q)(6,0) + (*q)(7,0) + (*q)(8,0)) + cos((*q)(6,0) - (*q)(7,0) - (*q)(8,0)) * (-c22) + cos((*q)(6,0) + (*q)(7,0) + (*q)(8,0)) * (-c22) - c14 * sin((*q)(6,0) - (*q)(7,0)) + c14 * sin((*q)(6,0) + (*q)(7,0)));
    J_CoM_KFE_LH(2,2) = (-c8 * sin((*q)(6,0) - (*q)(7,0) - (*q)(8,0)) + c8 * sin((*q)(6,0) + (*q)(7,0) + (*q)(8,0)) + cos((*q)(6,0) - (*q)(7,0) - (*q)(8,0)) * (-c22) + cos((*q)(6,0) + (*q)(7,0) + (*q)(8,0)) * (-c22));
    //std::cout << J_CoM_KFE_LH << std::endl << std::endl;

    (*J_CoM_LH) = mi_1/mi_total*J_CoM_HAA_LH + mi_2/mi_total*J_CoM_HFE_LH + mi_3/mi_total*J_CoM_KFE_LH;
    //std::cout << (*J_CoM_LH) << std::endl << std::endl;

    //Right Hind Leg
    J_CoM_HAA_RH(1,0) = (-c1 * cos((*q)(9,0)) + sin((*q)(9,0)) * (-c17));
    J_CoM_HAA_RH(2,0) = (-c1 * sin((*q)(9,0)) + cos((*q)(9,0)) * c17);
    //std::cout << "Right Hind Leg COM" << std::endl ;
    //std::cout << J_CoM_HAA_RH << std::endl << std::endl;

    J_CoM_HFE_RH(0,1) = (-c3 * cos((*q)(10,0)) + sin((*q)(10,0)) *c18);
    J_CoM_HFE_RH(1,0) = (c5 * cos((*q)(9,0) - (*q)(10,0)) + c5 * cos((*q)(9,0) + (*q)(10,0)) + sin((*q)(9,0) + (*q)(10,0)) * (-c19) + sin((*q)(9,0) - (*q)(10,0)) * c19 + sin((*q)(9,0)) * c25);
    J_CoM_HFE_RH(1,1) = (-c5 * cos((*q)(9,0) - (*q)(10,0)) + c5 * cos((*q)(9,0) + (*q)(10,0)) + sin((*q)(9,0) + (*q)(10,0)) * (-c19) + sin((*q)(9,0) - (*q)(10,0)) * (-c19));
    J_CoM_HFE_RH(2,0) = (c5 * sin((*q)(9,0) + (*q)(10,0)) + c5 * sin((*q)(9,0) - (*q)(10,0)) + cos((*q)(9,0) - (*q)(10,0)) * (-c19) + cos((*q)(9,0) + (*q)(10,0)) * c19 + cos((*q)(9,0)) * (-c25));
    J_CoM_HFE_RH(2,1) = (c5 * sin((*q)(9,0) + (*q)(10,0)) - c5 * sin((*q)(9,0) - (*q)(10,0)) + cos((*q)(9,0) - (*q)(10,0)) * c19 + cos((*q)(9,0) + (*q)(10,0)) * c19);
    //std::cout << J_CoM_HFE_RH << std::endl << std::endl;

    J_CoM_KFE_RH(0,1) = (-c7 * cos((*q)(10,0) + (*q)(11,0)) + sin((*q)(10,0) + (*q)(11,0)) * (-c21) - c10 * cos((*q)(10,0)));
    J_CoM_KFE_RH(0,2) = (-c7 * cos((*q)(10,0) + (*q)(11,0)) + sin((*q)(10,0) + (*q)(11,0)) * (-c21));
    J_CoM_KFE_RH(1,0) = (c8 * cos((*q)(9,0) + (*q)(10,0) + (*q)(11,0)) + c8 * cos((*q)(9,0) - (*q)(10,0) - (*q)(11,0)) + sin((*q)(9,0) + (*q)(10,0) + (*q)(11,0)) * c22 + sin((*q)(9,0) - (*q)(10,0) - (*q)(11,0)) * (-c22) + sin((*q)(9,0)) * c23 + c14 * cos((*q)(9,0) + (*q)(10,0)) + c14 * cos((*q)(9,0) - (*q)(10,0)));
    J_CoM_KFE_RH(1,1) = (c8 * cos((*q)(9,0) + (*q)(10,0) + (*q)(11,0)) - c8 * cos((*q)(9,0) - (*q)(10,0) - (*q)(11,0)) + sin((*q)(9,0) + (*q)(10,0) + (*q)(11,0)) * c22 + sin((*q)(9,0) - (*q)(10,0) - (*q)(11,0)) * c22 + c14 * cos((*q)(9,0) + (*q)(10,0)) - c14 * cos((*q)(9,0) - (*q)(10,0)));
    J_CoM_KFE_RH(1,2) = (c8 * cos((*q)(9,0) + (*q)(10,0) + (*q)(11,0)) - c8 * cos((*q)(9,0) - (*q)(10,0) - (*q)(11,0)) + sin((*q)(9,0) + (*q)(10,0) + (*q)(11,0)) * c22 + sin((*q)(9,0) - (*q)(10,0) - (*q)(11,0)) * c22);
    J_CoM_KFE_RH(2,0) = (c8 * sin((*q)(9,0) - (*q)(10,0) - (*q)(11,0)) + c8 * sin((*q)(9,0) + (*q)(10,0) + (*q)(11,0)) + cos((*q)(9,0) - (*q)(10,0) - (*q)(11,0)) * c22 + cos((*q)(9,0) + (*q)(10,0) + (*q)(11,0)) * (-c22) + cos((*q)(9,0)) * (-c23) + c14 * sin((*q)(9,0) - (*q)(10,0)) + c14 * sin((*q)(9,0) + (*q)(10,0)));
    J_CoM_KFE_RH(2,1) = (-c8 * sin((*q)(9,0) - (*q)(10,0) - (*q)(11,0)) + c8 * sin((*q)(9,0) + (*q)(10,0) + (*q)(11,0)) + cos((*q)(9,0) - (*q)(10,0) - (*q)(11,0)) * (-c22) + cos((*q)(9,0) + (*q)(10,0) + (*q)(11,0)) * (-c22) - c14 * sin((*q)(9,0) - (*q)(10,0)) + c14 * sin((*q)(9,0) + (*q)(10,0)));
    J_CoM_KFE_RH(2,2) = (-c8 * sin((*q)(9,0) - (*q)(10,0) - (*q)(11,0)) + c8 * sin((*q)(9,0) + (*q)(10,0) + (*q)(11,0)) + cos((*q)(9,0) - (*q)(10,0) - (*q)(11,0)) * (-c22) + cos((*q)(9,0) + (*q)(10,0) + (*q)(11,0)) * (-c22));
    //std::cout << J_CoM_KFE_RH << std::endl << std::endl;

    (*J_CoM_RH) = mi_1/mi_total*J_CoM_HAA_RH + mi_2/mi_total*J_CoM_HFE_RH + mi_3/mi_total*J_CoM_KFE_RH;
    //std::cout << (*J_CoM_RH) << std::endl << std::endl;

    (*J_CoM) << (*J_CoM_LF), (*J_CoM_RF), (*J_CoM_LH), (*J_CoM_RH);

}


void updateJacobian(Eigen::Matrix<double,12,1> *q, Eigen::Matrix<double,3,3> *J_foot_LF, Eigen::Matrix<double,3,3> *J_foot_RF, Eigen::Matrix<double,3,3> *J_foot_LH, Eigen::Matrix<double,3,3> *J_foot_RH, Eigen::Matrix<double,3,12> *J_foot){
    // Jacobian from Left Front Foot
    //(*J_foot_LF)(0,1) = -1;
    (*J_foot_LF)(0,0) = 0;
    (*J_foot_LF)(0,1) = (-c101 * cos((*q)(1,0) + (*q)(2,0)) - c102 * cos((*q)(1,0)));
    (*J_foot_LF)(0,2) = -(c101 * cos((*q)(1,0) + (*q)(2,0)));
    (*J_foot_LF)(1,0) = (-c103 * cos((*q)(0,0) - (*q)(1,0) - (*q)(2,0)) - c103 * cos((*q)(0,0) + (*q)(1,0) + (*q)(2,0)) - c104 * cos((*q)(0,0) - (*q)(1,0)) - c104 * cos((*q)(0,0) + (*q)(1,0)) - c105 * sin((*q)(0,0)));
    (*J_foot_LF)(1,1) = (c103 * cos((*q)(0,0) - (*q)(1,0) - (*q)(2,0)) - c103 * cos((*q)(0,0) + (*q)(1,0) + (*q)(2,0)) + c104 * cos((*q)(0,0) - (*q)(1,0)) - c104 * cos((*q)(0,0) + (*q)(1,0)));
    (*J_foot_LF)(1,2) = (-c103 * cos((*q)(0,0) + (*q)(1,0) + (*q)(2,0)) + c103 * cos((*q)(0,0) - (*q)(1,0) - (*q)(2,0)));
    (*J_foot_LF)(2,0) = (c103 * sin((*q)(0,0) + (*q)(1,0) + (*q)(2,0)) + c103 * sin((*q)(0,0) - (*q)(1,0) - (*q)(2,0)) + c104 * sin((*q)(0,0) + (*q)(1,0)) + c104 * sin((*q)(0,0) - (*q)(1,0)) - c105 * cos((*q)(0,0)));
    (*J_foot_LF)(2,1) = (c103 * sin((*q)(0,0) + (*q)(1,0) + (*q)(2,0)) - c103 * sin((*q)(0,0) - (*q)(1,0) - (*q)(2,0)) + c104 * sin((*q)(0,0) + (*q)(1,0)) - c104 * sin((*q)(0,0) - (*q)(1,0)));
    (*J_foot_LF)(2,2) = (-c103 * sin((*q)(0,0) - (*q)(1,0) - (*q)(2,0)) + c103 * sin((*q)(0,0) + (*q)(1,0) + (*q)(2,0)));

    // Jacobian from Right Front Foot
    (*J_foot_RF)(0,0) = 0;
    (*J_foot_RF)(0,1) = (-c101 * cos((*q)(4,0) + (*q)(5,0)) - c102 * cos((*q)(4,0)));
    (*J_foot_RF)(0,2) = -(c101 * cos((*q)(4,0) + (*q)(5,0)));
    (*J_foot_RF)(1,0) = (c103 * cos((*q)(3,0) - (*q)(4,0) - (*q)(5,0)) + c103 * cos((*q)(3,0) + (*q)(4,0) + (*q)(5,0)) + c104 * cos((*q)(3,0) - (*q)(4,0)) + c104 * cos((*q)(3,0) + (*q)(4,0)) + c105 * sin((*q)(3,0)));
    (*J_foot_RF)(1,1) = (-c103 * cos((*q)(3,0) - (*q)(4,0) - (*q)(5,0)) + c103 * cos((*q)(3,0) + (*q)(4,0) + (*q)(5,0)) - c104 * cos((*q)(3,0) - (*q)(4,0)) + c104 * cos((*q)(3,0) + (*q)(4,0)));
    (*J_foot_RF)(1,2) = (c103 * cos((*q)(3,0) + (*q)(4,0) + (*q)(5,0)) - c103 * cos((*q)(3,0) - (*q)(4,0) - (*q)(5,0)));
    (*J_foot_RF)(2,0) = (c103 * sin((*q)(3,0) + (*q)(4,0) + (*q)(5,0)) + c103 * sin((*q)(3,0) - (*q)(4,0) - (*q)(5,0)) + c104 * sin((*q)(3,0) + (*q)(4,0)) + c104 * sin((*q)(3,0) - (*q)(4,0)) - c105 * cos((*q)(3,0)));
    (*J_foot_RF)(2,1) = (c103 * sin((*q)(3,0) + (*q)(4,0) + (*q)(5,0)) - c103 * sin((*q)(3,0) - (*q)(4,0) - (*q)(5,0)) + c104 * sin((*q)(3,0) + (*q)(4,0)) - c104 * sin((*q)(3,0) - (*q)(4,0)));
    (*J_foot_RF)(2,2) = (-c103 * sin((*q)(3,0) - (*q)(4,0) - (*q)(5,0)) + c103 * sin((*q)(3,0) + (*q)(4,0) + (*q)(5,0)));
    
    // Jacobian from Left Hind Foot
    (*J_foot_LH)(0,0) = 0;
    (*J_foot_LH)(0,1) = (-c101 * cos((*q)(7,0) + (*q)(8,0)) - c102 * cos((*q)(7,0)));
    (*J_foot_LH)(0,2) = -(c101 * cos((*q)(7,0) + (*q)(8,0)));
    (*J_foot_LH)(1,0) = (-c103 * cos((*q)(6,0) - (*q)(7,0) - (*q)(8,0)) - c103 * cos((*q)(6,0) + (*q)(7,0) + (*q)(8,0)) - c104 * cos((*q)(6,0) - (*q)(7,0)) - c104 * cos((*q)(6,0) + (*q)(7,0)) - c105 * sin((*q)(6,0)));
    (*J_foot_LH)(1,1) = (c103 * cos((*q)(6,0) - (*q)(7,0) - (*q)(8,0)) - c103 * cos((*q)(6,0) + (*q)(7,0) + (*q)(8,0)) + c104 * cos((*q)(6,0) - (*q)(7,0)) - c104 * cos((*q)(6,0) + (*q)(7,0)));
    (*J_foot_LH)(1,2) = (-c103 * cos((*q)(6,0) + (*q)(7,0) + (*q)(8,0)) + c103 * cos((*q)(6,0) - (*q)(7,0) - (*q)(8,0)));
    (*J_foot_LH)(2,0) = (c103 * sin((*q)(6,0) + (*q)(7,0) + (*q)(8,0)) + c103 * sin((*q)(6,0) - (*q)(7,0) - (*q)(8,0)) + c104 * sin((*q)(6,0) + (*q)(7,0)) + c104 * sin((*q)(6,0) - (*q)(7,0)) - c105 * cos((*q)(6,0)));
    (*J_foot_LH)(2,1) = (c103 * sin((*q)(6,0) + (*q)(7,0) + (*q)(8,0)) - c103 * sin((*q)(6,0) - (*q)(7,0) - (*q)(8,0)) + c104 * sin((*q)(6,0) + (*q)(7,0)) - c104 * sin((*q)(6,0) - (*q)(7,0)));
    (*J_foot_LH)(2,2) = (-c103 * sin((*q)(6,0) - (*q)(7,0) - (*q)(8,0)) + c103 * sin((*q)(6,0) + (*q)(7,0) + (*q)(8,0)));

    // Jacobian from Right Hind Foot
    (*J_foot_RH)(0,0) = 0;
    (*J_foot_RH)(0,1) = (-c101 * cos((*q)(10,0) + (*q)(11,0)) - c102 * cos((*q)(10,0)));
    (*J_foot_RH)(0,2) = -(c101 * cos((*q)(10,0) + (*q)(11,0)));
    (*J_foot_RH)(1,0) = (c103 * cos((*q)(9,0) - (*q)(10,0) - (*q)(11,0)) + c103 * cos((*q)(9,0) + (*q)(10,0) + (*q)(11,0)) + c104 * cos((*q)(9,0) - (*q)(10,0)) + c104 * cos((*q)(9,0) + (*q)(10,0)) + c105 * sin((*q)(9,0)));
    (*J_foot_RH)(1,1) = (-c103 * cos((*q)(9,0) - (*q)(10,0) - (*q)(11,0)) + c103 * cos((*q)(9,0) + (*q)(10,0) + (*q)(11,0)) - c104 * cos((*q)(9,0) - (*q)(10,0)) + c104 * cos((*q)(9,0) + (*q)(10,0)));
    (*J_foot_RH)(1,2) = (c103 * cos((*q)(9,0) + (*q)(10,0) + (*q)(11,0)) - c103 * cos((*q)(9,0) - (*q)(10,0) - (*q)(11,0)));
    (*J_foot_RH)(2,0) = (c103 * sin((*q)(9,0) + (*q)(10,0) + (*q)(11,0)) + c103 * sin((*q)(9,0) - (*q)(10,0) - (*q)(11,0)) + c104 * sin((*q)(9,0) + (*q)(10,0)) + c104 * sin((*q)(9,0) - (*q)(10,0)) - c105 * cos((*q)(9,0)));
    (*J_foot_RH)(2,1) = (c103 * sin((*q)(9,0) + (*q)(10,0) + (*q)(11,0)) - c103 * sin((*q)(9,0) - (*q)(10,0) - (*q)(11,0)) + c104 * sin((*q)(9,0) + (*q)(10,0)) - c104 * sin((*q)(9,0) - (*q)(10,0)));
    (*J_foot_RH)(2,2) = (-c103 * sin((*q)(9,0) - (*q)(10,0) - (*q)(11,0)) + c103 * sin((*q)(9,0) + (*q)(10,0) + (*q)(11,0)));

    /*std::cout << (*J_foot_LF) << std::endl << std::endl;
    std::cout << (*J_foot_RF) << std::endl << std::endl;
    std::cout << (*J_foot_LH) << std::endl << std::endl;
    std::cout << (*J_foot_RH) << std::endl << std::endl;*/

    (*J_foot) << (*J_foot_LF), (*J_foot_RF), (*J_foot_LH), (*J_foot_RH);
}